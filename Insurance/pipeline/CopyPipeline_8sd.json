{
	"name": "CopyPipeline_8sd",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"fieldList": [],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Power Query1",
				"type": "ExecuteWranglingDataflow",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "powerquery1",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"queries": [
						{
							"queryName": "UserQuery",
							"dataflowSinks": [
								{
									"name": "SinkAzureSqlTable1",
									"dataset": {
										"referenceName": "AzureSqlTable1",
										"type": "DatasetReference"
									},
									"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tcounty as string,\n\t\thigh_eq_site_limit as decimal(18,2),\n\t\t{No.of policyID} as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkAzureSqlTable1"
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"windowStart": {
				"type": "String"
			},
			"windowEnd": {
				"type": "String"
			}
		},
		"annotations": []
	}
}